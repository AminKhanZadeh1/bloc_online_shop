// Mocks generated by Mockito 5.4.5 from annotations
// in bloc_online_shop/test/product_unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:bloc_online_shop/Features/Products/Data/Repository/product_repo_impl.dart'
    as _i5;
import 'package:bloc_online_shop/Features/Products/Data/Sources/Remote/products_api_service.dart'
    as _i3;
import 'package:bloc_online_shop/Features/Products/Domain/Entities/product_entity.dart'
    as _i6;
import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio =>
      (super.noSuchMethod(
            Invocation.getter(#dio),
            returnValue: _FakeDio_0(this, Invocation.getter(#dio)),
          )
          as _i2.Dio);

  @override
  _i4.Future<List<dynamic>> getProducts() =>
      (super.noSuchMethod(
            Invocation.method(#getProducts, []),
            returnValue: _i4.Future<List<dynamic>>.value(<dynamic>[]),
          )
          as _i4.Future<List<dynamic>>);
}

/// A class which mocks [ProductRepoImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRepoImpl extends _i1.Mock implements _i5.ProductRepoImpl {
  MockProductRepoImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i6.ProductEntity>> fetchProducts() =>
      (super.noSuchMethod(
            Invocation.method(#fetchProducts, []),
            returnValue: _i4.Future<List<_i6.ProductEntity>>.value(
              <_i6.ProductEntity>[],
            ),
          )
          as _i4.Future<List<_i6.ProductEntity>>);
}
